---
- name: Check if sysctl file exist
  stat:
    path: "{{ sysctl.config_file }}"
  register: sysctl_conf_file
- fail:
    msg: "Missing sysctl config_file ({{ sysctl.config_file }})"
  when: sysctl_conf_file.stat.exists == false

- name: Check if sysctl dir exist
  stat:
    path: "{{ sysctl.config_dir }}"
  register: sysctl_conf_dir
- fail:
    msg: "Missing sysctl config dir ({{  sysctl.config_dir }})"
  when: sysctl_conf_dir.stat.exists == false

- name: Check if /etc/sysctl.conf is simlinked in /etc/sysctl.d/
  file:
    src: "{{ sysctl.config_file }}"
    dest: "{{ sysctl.config_dir }}/99-sysctl.conf"
    state: link
  become: true

- name: Add simlink to expected
  set_fact:
    sysctl_config_files_new: "{{ sysctl_config_files_new + [ sysctl.config_dir + '/99-sysctl.conf' ] }}"
- name: Add generated dropin to of expected
  set_fact:
    sysctl_config_files_new: "{{ sysctl_config_files_new + [ sysctl.config_dir + '/' + item.key + '.conf' ] }}"
  loop: "{{ sysctl.dropin | dict2items }}"
- debug:
    msg: "{{ sysctl_config_files_new }}"

- name: Search sysctl files
  find:
    paths: "{{ sysctl.config_dir }}"
    file_type: any
    patterns: "{{ sysctl.config_file_pattern }}"
  register: find_sysctl_files

- name: Add files to current
  set_fact:
     sysctl_config_files_current: "{{ sysctl_config_files_current + [ item.path ] }}"
  loop: "{{ find_sysctl_files.files }}"

- name: Detect newly created dropin
  set_fact:
    sysctl_config_files_diff: "{{ sysctl_config_files_current | difference(sysctl_config_files_new) }}"
- debug:
    msg:
      - "{{ sysctl_config_files_diff }}"
  when:
    - sysctl_config_files_diff | length > 0
    - sysctl_config_files_diff is defined
- fail:
    msg:
      - "Please migrate old dropins in inventory"
      - "{{ sysctl_config_files_diff }}"
  when:
    - sysctl_config_files_diff | length > 0
    - sysctl_config_files_diff is defined

- name: Search if key is declared elsewhere
  command: grep -RlE '^{{ item.1.key }}(\s|)=.*' --exclude="{{ item.0.key }}.conf" {{ sysctl.config_dir }}
  loop: "{{ sysctl.dropin | dict2items | flatten_item | subelements('value') }}"
  register: sysctl_dropin_source_conflict
  failed_when: false
  changed_when: False
  # check_mode: yes
- fail:
    msg:
      - "Sysctl dropin already declared, please migrate"
      - "{{ item }}"
  loop: "{{ sysctl_dropin_source_conflict.results }}"
  when:
    - item.rc is defined and item.rc == 0
    - not ansible_check_mode

# idempotent loading, only hotload the module if not loaded
- name: Get value of already loaded module
  command: sysctl -n {{ item.1.key }}
  loop: "{{ sysctl.dropin | dict2items | flatten_item | subelements('value') }}"
  register: sysctl_modules_loaded
  changed_when: False

- set_fact:
    sysctl_dropin_value_current: |
      {%- set family = item.item.0.key -%}
      {%- set key = item.item.1.key -%}
      {%- set value = item.stdout -%}
      {%- if value.isdigit() -%}
        {%- set value = item.stdout | int -%}
      {%- endif -%}
      {%- if sysctl_dropin_value_current[family] is defined -%}
        {%- set ret= sysctl_dropin_value_current[family] -%}
          {%- set ignored = ret.update({key: value}|combine(ret)) -%}
        {%- set ignored = sysctl_dropin_value_current.update({family: ret}) -%}
      {%- else -%}
        {%- set ret= dict() -%}
        {%- set ignored = ret.update({key: value}|combine(ret)) -%}
        {%- set ignored = sysctl_dropin_value_current.update({family: ret}) -%}
      {%- endif -%}
      {{ sysctl_dropin_value_current }}
  loop: "{{ sysctl_modules_loaded.results }}"

# Now we need to create a diff between new and actual state
- set_fact:
    sysctl_dropin_value_changed: "{{ sysctl_dropin_value_current | compare_dict_changed(sysctl.dropin) }}"

- debug:
    msg:
      - "sysctl_dropin_value_changed:"
      - "{{ sysctl_dropin_value_changed }}"

- name: Hot-Apply needed changes
  command: sysctl -q -w {{ item.1.key }}={{ item.1.value }}
  loop: "{{ sysctl_dropin_value_changed | dict2items | flatten_item | subelements('value') }}"
  become: true

# @TODO: FIX blacklist or change filename for /etc/sysctl.d/00protected-links.conf
- name: Export config files
  template:
    src: etc/sysctl.d/sysctl_conf.j2
    dest: /etc/sysctl.d/{{ item.key }}.conf
    owner: root
    group: root
    mode: '0644'
  loop: "{{ sysctl.dropin | dict2items }}"
  become: true
